name: Dart

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    # Note that this workflow uses the latest stable version of the Dart SDK.
    # Docker images for other release channels - like dev and beta - are also
    # available. See https://hub.docker.com/r/google/dart/ for the available
    # images.
    container:
      image:  bradyt/dart-task

    steps:
      - uses: actions/checkout@v2

      # toc: https://taskwarrior.org/docs/taskserver/setup.html

      # 3: https://taskwarrior.org/docs/taskserver/configure.html

      - run: export TASKDDATA=/var/taskd

      - run: cp fixture/pki/client.cert.pem $TASKDDATA
      - run: cp fixture/pki/client.key.pem  $TASKDDATA
      - run: cp fixture/pki/server.cert.pem $TASKDDATA
      - run: cp fixture/pki/server.key.pem  $TASKDDATA
      - run: cp fixture/pki/server.crl.pem  $TASKDDATA
      - run: cp fixture/pki/ca.cert.pem     $TASKDDATA

      # 3: https://taskwarrior.org/docs/taskserver/control.html

      - run: taskdctl start

      # 4: https://taskwarrior.org/docs/taskserver/user.html

      - run: taskd add org Public
      - run: taskd add user 'Public' 'First Last'

      # 4: https://taskwarrior.org/docs/taskserver/taskwarrior.html

      - run: cp -r fixture/.task            ~/
      - run: cp    fixture/.taskrc.template ~/.taskrc

      - run: task rc.confirmation:no config confirmation -- no
      - run: task config taskd.credentials -- Public/First Last/`ls $TASKDDATA/orgs/Public/users`

      # 5: https://taskwarrior.org/docs/taskserver/sync.html

      - run: task sync init
      - run: task config confirmation -- yes

      - name: Print Dart SDK version
        run: dart --version

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze --fatal-infos

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test

      - name: test coverage
        run: dart pub run test_coverage --min-coverage 95

      - name: run pub publish --dry-run
        run: dart pub publish --dry-run
